if-else: 
- else clause belongs to innermost if statement
- once an else if succeeds, none of the remaining else ifs or elses will be tested

switch: 
- expression MUST be evaluated to char, byte, short, int or an enum, CANNOT be long, float, double
- case constant MUST be evaluated to expression type
- case constant MUST be a compile time constant (final variable or constant)
- case constant MUST fit in expression type; ex: byte b = 2; switch(b) { case 128: } // does not compile - 128 is too large for a byte
- cannot have more then one case with same value
- boxing in expression is allowed
- attention to fall-through logic

while loops: 
- variables used in expression must be declared befor loop; ex: while (int x = 2) { } // not legal

Enhanced for: 
- variable must be declared in, not outside; ex: int x = 0; int[] a = {1, 2, 3}; for (x : a) { } // not compile

Exceptions:
- errors are unchecked exceptions
- cannot catch a checked exception which is never thrown in corresponding try block

Assertions: 
- assert(boolean expression) 
- if expression is false, throws AssertionError            
- assert(boolean expression): error messsage; 
- error message can be any that result in a value, even a constructor call; ex: assert(j==12): new Clumsy();
- null is also allowed for error message			
- prior to Java 1.4 assert is not a keyword			

Ex: int assert = 5; 
javac -source 1.4 TestClass.java - compiler error
javac -source 1.3 TestClass.java - compiles but with warning

- assertions are disabled by default
- enable assertions with -ea or -enableassertions when running; ex: java -ea TestClass
- disable assertions with -da or -disableassertions; ex: java -da TestClass
- selective enabling or disabling; ex: java -ea:com.test -da:com.test TestClass; this will enable assertions for package com.test, except class TestClass
- using assertions - don't use it to validate arguments to a public method                   
                   - use it to validate arguments to a private method                   
                   - don't use it to validate command line arguments                   
                   - use to check for cases that are never supposed to happen, even in public methods				   
                   - assertions must not cause side effects